#!/usr/bin/env python

import requests
from sys import argv
from os import scandir
from os.path import join
from logging import getLogger, Logger, StreamHandler, DEBUG
from requests.sessions import Session
from requests.adapters import HTTPAdapter, Retry
from json import loads, dumps, dump

from typing import Dict, Any

logger: Logger = getLogger()
logger.propagate = True
logger.addHandler(StreamHandler())


def create_requests_session(headers: Dict[str, str] = dict()) -> Session:
    session: Session = requests.session()
    session.headers.update(headers)
    retry = Retry(total=10, backoff_factor=0.5)
    adapter = HTTPAdapter(max_retries=retry)
    session.mount(f"http", adapter)
    return session


def main() -> None:
    source_data: Dict[str, Any] = loads(input())
    logger.setLevel(
        source_data["source"]["log_level"]
        if "log_level" in source_data["source"].keys()
        else "INFO"
    )
    logger.debug(dumps(source_data, indent=2))
    logger.debug(dumps(argv, indent=2))

    # requests_session: Session = create_requests_session(
    #     {"Authorization": f"Bearer {source_data['source']['artifactory_token']}"}
    # )

    response_data: Dict[str, Any] = dict()
    return_data: Dict[str, Any] = {
        "version": {"uri": source_data["version"]["uri"]},
        "metadata": [
            {"name": item[0], "value": item[1]} for item in response_data.items()
        ],
    }
    logger.debug(
        dumps(
            return_data,
            indent=2,
        )
    )
    print(dumps(return_data))


if __name__ == "__main__":
    main()
