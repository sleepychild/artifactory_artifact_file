#!/usr/bin/env python

import requests
from sys import argv
from logging import getLogger, Logger, StreamHandler, DEBUG
from requests.sessions import Session
from requests.adapters import HTTPAdapter, Retry
from json import loads, dumps

from typing import Dict, Any

logger: Logger = getLogger()
logger.propagate = True
logger.addHandler(StreamHandler())
# logger.setLevel(DEBUG)


def create_requests_session(headers: Dict[str, str] = dict()) -> Session:
    session: Session = requests.session()
    session.headers.update(headers)
    retry = Retry(total=10, backoff_factor=0.5)
    adapter = HTTPAdapter(max_retries=retry)
    session.mount(f"http", adapter)
    return session


def get_input_data() -> Dict[str, Any]:
    return loads(input())


def main() -> None:
    source_data: Dict[str, Any] = get_input_data()
    logger.debug(dumps(source_data, indent=2))
    output_dir: str = argv[1]
    logger.debug(f"OUTPUT_DIR: {output_dir}")
    requests_session: Session = create_requests_session(
        {"Authorization": f"Bearer {source_data['source']['artifactory_token']}"}
    )
    response = requests_session.get(
        f"{source_data['source']['artifactory_url']}/artifactory/api/storage/{source_data['source']['artifactory_repo']}/{source_data['source']['artifactory_path']}{source_data['version']['uri']}"
    )
    response_data: Dict[str, Any] = response.json()
    logger.debug(dumps(response_data, indent=2))
    download_url: str = response_data["downloadUri"]
    file_name: str = download_url.split("/")[-1]
    with requests_session.get(download_url, stream=True) as dl:
        dl.raise_for_status()
        with open(f"{output_dir}/{file_name}", "wb") as f:
            for chunk in dl.iter_content():
                if chunk:
                    f.write(chunk)
    del response_data["checksums"]
    del response_data["originalChecksums"]
    return_data: Dict[str, Any] = {
        "version": {"uri": source_data["version"]["uri"]},
        "metadata": [
            {"name": item[0], "value": item[1]} for item in response_data.items()
        ],
    }
    logger.debug(
        dumps(
            return_data,
            indent=2,
        )
    )
    print(dumps(return_data))


if __name__ == "__main__":
    main()
